[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://dtnv3atgw0o3c"]

[ext_resource type="Script" uid="uid://1mi7xgm224p4" path="res://addons/diffuse_lambert/DiffuseLambert.gd" id="1_oimbd"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_oimbd"]
expanded_output_ports = [0]
parameter_name = "ColorParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_w5acj"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_oimbd"]
input_name = "light_color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_w5acj"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ngmhf"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_gu2qu"]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_35lqu"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vgl01"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_ebqia"]
initialized = true
script = ExtResource("1_oimbd")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_g0shi"]
input_name = "diffuse"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;
	float n_out2p3 = n_out2p0.b;


// VectorCompose:3
	vec3 n_out3p0 = vec3(n_out2p1, n_out2p2, n_out2p3);


// Output:0
	ALBEDO = n_out3p0;


}

void light() {
// Input:9
	vec3 n_out9p0 = DIFFUSE_LIGHT;


// Input:13
	vec3 n_out13p0 = NORMAL;


// Input:12
	vec3 n_out12p0 = LIGHT;


// Input:11
	vec3 n_out11p0 = ALBEDO;


// Input:10
	vec3 n_out10p0 = LIGHT_COLOR;


// Input:15
	float n_out15p0 = ATTENUATION;


	vec3 n_out18p0;
// Lambert:18
	{
		
			const float INV_PI = 0.318309;
			
			vec3 n = normalize( n_out13p0 );
			vec3 l = normalize( n_out12p0 );
			
			float NdotL = dot(n, l); // [-1.0, 1.0].
			float cNdotL = max(NdotL, 0.0); // [0.0, 1.0].
			
			n_out18p0 = n_out11p0 * n_out10p0 * n_out15p0 * cNdotL * INV_PI;
			
	}


// VectorOp:17
	vec3 n_out17p0 = n_out9p0 + n_out18p0;


// Output:0
	DIFFUSE_LIGHT = n_out17p0;


}
"
graph_offset = Vector2(-146.969, -410.598)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_oimbd")
nodes/fragment/2/position = Vector2(-40, 20)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorCompose_w5acj")
nodes/fragment/3/position = Vector2(220, 120)
nodes/fragment/connections = PackedInt32Array(2, 1, 3, 0, 2, 2, 3, 1, 2, 3, 3, 2, 3, 0, 0, 0)
nodes/light/0/position = Vector2(740, -20)
nodes/light/9/node = SubResource("VisualShaderNodeInput_g0shi")
nodes/light/9/position = Vector2(20, -140)
nodes/light/10/node = SubResource("VisualShaderNodeInput_oimbd")
nodes/light/10/position = Vector2(20, 140)
nodes/light/11/node = SubResource("VisualShaderNodeInput_w5acj")
nodes/light/11/position = Vector2(20, 80)
nodes/light/12/node = SubResource("VisualShaderNodeInput_ngmhf")
nodes/light/12/position = Vector2(20, 20)
nodes/light/13/node = SubResource("VisualShaderNodeInput_gu2qu")
nodes/light/13/position = Vector2(20, -40)
nodes/light/15/node = SubResource("VisualShaderNodeInput_35lqu")
nodes/light/15/position = Vector2(40, 220)
nodes/light/17/node = SubResource("VisualShaderNodeVectorOp_vgl01")
nodes/light/17/position = Vector2(555.383, -76.3598)
nodes/light/18/node = SubResource("VisualShaderNodeCustom_ebqia")
nodes/light/18/position = Vector2(320, 40)
nodes/light/connections = PackedInt32Array(9, 0, 17, 0, 17, 0, 0, 0, 11, 0, 18, 2, 18, 0, 17, 1, 12, 0, 18, 1, 13, 0, 18, 0, 10, 0, 18, 3, 15, 0, 18, 4)
